from logging import exception
from sqlite3.dbapi2 import version
import vk_api, datetime, sqlite3, random
from vk_api import keyboard
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
from datetime import datetime

from config import token
from config import bot_id
from config import bot_domain
from config import bot_version

from config import dev_id
from config import prefix
from config import ranks
from config import names

class MyBotLongPoll(VkBotLongPoll):
	def listen(self):
		while True:
			try:
				for event in self.check():
					yield event
			except Exception as e:
				print('[Error] ', e)

vk_session = vk_api.VkApi(token = token)
longpoll = MyBotLongPoll(vk_session, bot_id)

print(f"[{datetime.now()}] –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")

db = sqlite3.connect('db.sqlite')
sql = db.cursor()
print(f"[{datetime.now()}] –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")

sql.execute("""CREATE TABLE IF NOT EXISTS users (
	user_id INTEGER,
	rank INTEGER,
	name TEXT
)""")
sql.execute("""CREATE TABLE IF NOT EXISTS biz (
	biz_name TEXT,
	biz_type INTEGER,
	biz_cost INTEGER,
	biz_owner INTEGER
)""")
db.commit()

keyboard = VkKeyboard(one_time=False)
keyboard.add_button('&#128452; –ü—Ä–æ—Ñ–∏–ª—å', color=VkKeyboardColor.PRIMARY)
keyboard.add_button('&#128221; –ë–µ—Å–µ–¥–∞', color=VkKeyboardColor.SECONDARY)
keyboard.add_button('&#129302; –ë–æ—Ç', color=VkKeyboardColor.SECONDARY)

keyboard_reg_url = VkKeyboard(one_time = False, inline=True)
keyboard_reg_url.add_openlink_button('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', link= 'https://vk.me/domain') # –í—Å—Ç–∞–≤–∏—Ç—å –≤–º–µ—Å—Ç–æ domain —Å—Å—ã–ª–∫–∞-—Å–∫–æ—Ä–∞—â–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã



keyboard_reg = VkKeyboard(one_time = False, inline=True)
keyboard_reg.add_button('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', color=VkKeyboardColor.POSITIVE)

keyboard_group = VkKeyboard(one_time=False)
keyboard_group.add_button('&#128452; –ü—Ä–æ—Ñ–∏–ª—å', color=VkKeyboardColor.PRIMARY)
keyboard_group.add_button('&#129302; –ë–æ—Ç', color=VkKeyboardColor.SECONDARY)

keyboard_profile = VkKeyboard(one_time = False, inline=True)
keyboard_profile.add_button('&#9881; –ù–∞—Å—Ç—Ä–æ–π–∫–∏', color=VkKeyboardColor.SECONDARY)

keyboard_profile_settings = VkKeyboard(one_time = False, inline=True)
keyboard_profile_settings.add_button('&#127917; –°–º–µ–Ω–∞ –Ω–∏–∫–∞', color=VkKeyboardColor.SECONDARY)

def reply_message(chat_id, text, keyboard):
	vk_session.method('messages.send', {'user_id' : chat_id, 'message' : text, 'random_id' : 0, 'keyboard' : keyboard})

def reply_message_chat(chat_id, text, keyboard):
	vk_session.method('messages.send', {'chat_id' : chat_id, 'message' : text, 'random_id' : 0, 'keyboard' : keyboard})

def check_registration(user_id):
	sql.execute(f"SELECT user_id FROM users WHERE user_id = '{user_id}'")
	if sql.fetchone() is None:
		reply_message_chat(chat_id, f'[id{user_id}|–ò–∑–≤–∏–Ω–∏], –Ω–æ —è –º–æ–≥—É –æ–±—Å–ª—É–∂–∏–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –æ–¥–Ω–∏–º –∏–∑ –Ω–∏—Ö!', keyboard_reg_url.get_keyboard())
		return 0
	else:	
		return 1

def get_user(user_id):
	user_id = vk_session.method("users.get", {"user_ids": user_id})
	user_id = user_id[0]['first_name'] +  ' ' + user_id[0]['last_name']
	return user_id

def execute_read_query(query):
    cursor = db.cursor()
    result = None
    cursor.execute(query)
    result = cursor.fetchone()
    return result[0]


keyboard_invite = VkKeyboard(one_time = False, inline=True)
keyboard_invite.add_button('–ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É', color=VkKeyboardColor.POSITIVE)

for event in longpoll.listen():
	if event.type == VkBotEventType.MESSAGE_NEW:

		received_message = event.object.message['text']
		user_id = event.message.from_id 
		
		if event.from_chat:
			chat_id = event.chat_id
			
			if received_message == f'{bot_domain} ü§ñ –ë–æ—Ç' and check_registration(user_id) == 1:
				reply_message_chat(chat_id, f'&#9851; –í–µ—Ä—Å–∏—è –±–æ—Ç–∞: {bot_version}\n&#128706; –î–µ–π—Å—Ç–≤—É—é—â–∏–π –ø—Ä–µ—Ñ–∏–∫—Å: "{prefix}"', keyboard.get_keyboard())
			
			elif received_message == f"{prefix}cid":
				reply_message_chat(chat_id, f'–ß–∞—Ç ID: {chat_id}', [])

			elif received_message == f'{bot_domain} üóÑ –ü—Ä–æ—Ñ–∏–ª—å' and check_registration(user_id) == 1:
				rank = execute_read_query(f'SELECT rank FROM users WHERE user_id = "{user_id}"')
				rank = ranks[rank-1]

				name = execute_read_query(f'SELECT name FROM users WHERE user_id = "{user_id}"')

				if name == 'None': 
					name_id = random.randint(0, 5)
					name = names[name_id]

				biz_name = sql.execute(f'SELECT biz_name FROM biz WHERE biz_owner = "{user_id}"')
				biz_name = biz_name.fetchone()
				
				if biz_name is None:
					biz_name = '–ù–µ—Ç—É'
				else:
					biz_name = sql.execute(f'SELECT biz_name FROM biz WHERE biz_owner = "{user_id}"')
					biz_name = biz_name.fetchone()[0]

				reply_message_chat(chat_id, f'&#128697; –ü—Ä–æ—Ñ–∏–ª—å: {name}\n&#127775; –†–∞–Ω–≥: {rank}\n\n\n&#127760; –ë–∏–∑–Ω–µ—Å: {biz_name}', [])

			elif received_message == f'{bot_domain} üìù –ë–µ—Å–µ–¥–∞' and check_registration(user_id) == 1:
				title = vk_session.method('messages.getConversationsById', {'peer_ids' : 2000000000 + chat_id})['items'][0]['chat_settings']['title']
				owner_id = vk_session.method('messages.getConversationsById', {'peer_ids' : 2000000000 + chat_id})['items'][0]['chat_settings']['owner_id']
				members = vk_session.method("messages.getConversationMembers", {"peer_id": 2000000000 + chat_id})['count']
				reply_message_chat(chat_id, f'&#128172; –ë–µ—Å–µ–¥–∞: "{title}"\n&#128081; –û—Å–Ω–æ–≤–∞—Ç–µ–ª—å: {get_user(owner_id)}\n&#9881; –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä: {chat_id}\n&#128106; –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {members}', keyboard_invite.get_keyboard())

			elif received_message == f'{bot_domain} –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É' and check_registration(user_id) == 1: 
				invite_code = vk_session.method("messages.getInviteLink", {"peer_id": 2000000000 + chat_id})['link']
				reply_message_chat(chat_id, f'–í–æ—Ç [id{user_id}|—Ç–≤–æ—è] —Å—Å—ã–ª–∫–∞: {invite_code}', [])

			else:
				if prefix in received_message:
					reply_message_chat(chat_id, f'–û–π, –∫–∞–∂–µ—Ç—Å—è —è –≤–∏–∂—É –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–æ–º–∞–Ω–¥—É! –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±–µ—â–∞–ª –µ—ë —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫ –æ—Å–µ–Ω–∏. –ù–æ –Ω–µ —Å–∫–∞–∑–∞–ª, –∫ –∫–∞–∫–æ–π', [])
			
		else:
			chat_id = event.object.message['from_id']

			if received_message == '–ù–∞—á–∞—Ç—å':
				reply_message(chat_id, '–ü–æ—Ä–∞ –æ—Å–≤–æ–±–æ–¥–∏—Ç—å —Ç–≤–æ–π —Ä–∞–∑—É–º. –ù–æ —è –º–æ–≥—É –ª–∏—à—å —É–∫–∞–∑–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É. –¢–µ–±–µ –ø—Ä–∏–¥—ë—Ç—Å—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –Ω–µ—ë &#128572;', keyboard_reg.get_keyboard())

			elif received_message == '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è':
				sql.execute(f"SELECT user_id FROM users WHERE user_id = '{user_id}'")
				if sql.fetchone() is None:
					sql.execute(f"INSERT INTO users VALUES (?, ?, ?)", (user_id, 1, 'None'))
					db.commit()
					print(f'[{datetime.now()}] [MySQL] –ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω')
					reply_message(chat_id, f'–ö—Ä—É—Ç–æ! –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤ –Ω–∞—à–∏—Ö —Ä—è–¥–∞—Ö, –¥–∞ –ø—Ä–µ–±—É–¥–µ—Ç —Å [id{user_id}|—Ç–æ–±–æ–π] –°–∏–ª–∞!', keyboard.get_keyboard())
				else:
					print(f'[{datetime.now()}] [MySQL] –ó–∞–ø—Ä–æ—Å –æ—Ç–∫–ª–æ–Ω–µ–Ω. –í–≤–µ–¥–µ–Ω—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ')
					reply_message(chat_id, f'–ù–µ—Ç-–Ω–µ—Ç, [id{user_id}|—Ç—ã] –Ω–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫ –≤–∑—è—Ç—å –∏ –∑–∞–Ω–æ–≤–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è. –≠—Ç–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–∞—è.', keyboard.get_keyboard())


			elif received_message == f'ü§ñ –ë–æ—Ç':
				reply_message(chat_id, f'&#9889; –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞\n&#128187; –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: –†.–Æ.\n&#9881; –í–µ—Ä—Å–∏—è: {bot_version}', keyboard_group.get_keyboard())
			
			elif received_message == f'üóÑ –ü—Ä–æ—Ñ–∏–ª—å' and check_registration(user_id) == 1:
				rank = execute_read_query(f'SELECT rank FROM users WHERE user_id = "{user_id}"')
				rank = ranks[rank-1]

				name = execute_read_query(f'SELECT name FROM users WHERE user_id = "{user_id}"')

				if name == 'None': 
					name_id = random.randint(0, 5)
					name = names[name_id]

				biz_name = sql.execute(f'SELECT biz_name FROM biz WHERE biz_owner = "{user_id}"')
				biz_name = biz_name.fetchone()
				
				if biz_name is None:
					biz_name = '–ù–µ—Ç—É'
				else:
					biz_name = sql.execute(f'SELECT biz_name FROM biz WHERE biz_owner = "{user_id}"')
					biz_name = biz_name.fetchone()[0]

				reply_message(chat_id, f'&#128697; –ü—Ä–æ—Ñ–∏–ª—å: {name}\n&#127775; –†–∞–Ω–≥: {rank}\n\n\n&#127760; –ë–∏–∑–Ω–µ—Å: {biz_name}', keyboard_profile.get_keyboard())

			elif received_message == '‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏' and check_registration(user_id) == 1:
				name = sql.execute(f'SELECT name FROM users WHERE user_id = "{user_id}"')
				name = name.fetchone()[0]
				if name == 'None': 
					name = '–ù–µ—Ç—É'
					name_info = '–¢—ã –∞–Ω–æ–Ω–∏–º! –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–∞–∂–¥—ã–π —Ä–∞–∑ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–∏–∫ —Å—Ä–µ–¥–∏ 5 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤'
				else:
					name_info = '–ö–∞–∫–æ–π –ª—é–±–æ–ø—ã—Ç–Ω—ã–π —É —Ç–µ–±—è –Ω–∏–∫! –ù–∞–¥–µ—é—Å—å —Ç—ã –Ω–µ –ø—Ä–æ—Ç–∏–≤, —á—Ç–æ —è –µ–≥–æ –ø–æ–≤–∑–∞–∏–º—Å—Ç–≤—É—é –¥–ª—è —Å–≤–æ–∏—Ö –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–æ–≤? –ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ –ù–æ–≤—ã–π —Å—ã–Ω (1) –∏ –ù–æ–≤–∞—è –¥–æ—á—å (2) –∑–≤—É—á–∏—Ç –Ω–µ —Ç–∞–∫ –∫—Ä–∞—Å–∏–≤–æ –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å —Ç–≤–æ–∏–º –Ω–∏–∫–æ–º &#128547;'
				reply_message(chat_id, f'–ó–¥–µ—Å—å, –≤ —ç—Ç–æ–º –Ω–µ–±–æ–ª—å—à–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –º—ã —É–º–µ—Å—Ç–∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–≤–æ–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞. –í—ã–±–∏—Ä–∞–π –Ω—É–∂–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ –º–µ–Ω—è–π –ø–æ–¥ —Å–µ–±—è &#128521;\n\n–î–µ–π—Å—Ç–≤—É—é—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n\n&#127380; –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä: id{user_id} [–ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å]\n&#127917; –ü—Å–µ–≤–¥–æ–Ω–∏–º (–Ω–∏–∫):  {name}\n\n\n\n&#127744; {name_info}', keyboard_profile_settings.get_keyboard())

			elif received_message == 'üé≠ –°–º–µ–Ω–∞ –Ω–∏–∫–∞' and check_registration(user_id) == 1:
				reply_message(chat_id, f'–ú–æ–∏ –±–∏—Ç—ã –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞—é—Ç, —á—Ç–æ —Ç—ã –ª—é–±–∏—à—å –º–µ–Ω—è—Ç—å—Å—è –∏ —ç—Ç–æ –æ—á–µ–Ω—å –∫—Ä—É—Ç–æ, —è —Ç–µ–±–µ –ø–æ–º–æ–≥—É. –í–≤–µ–¥–∏: {prefix}newname Text\n\n&#128204; –í –Ω–∏–∫–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—Ä–æ–±–µ–ª–æ–≤\n&#128204; –ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –Ω–∏–∫, –Ω–∞–ø–∏—à–∏ "None"', [])

			elif f'{prefix}newname' in received_message and check_registration(user_id) == 1:
				name = sql.execute(f"SELECT name FROM users WHERE user_id = '{user_id}'")
				name = name.fetchone()[0]
				new_name = received_message.split()
				new_name = new_name[1]
				print(new_name[1])
				if name == 'None':
					name = '–ê–Ω–æ–Ω–∏–º'
				sql.execute(f"UPDATE users SET name = '{new_name}' WHERE user_id = '{user_id}'")
				db.commit()
				if new_name == 'None':
					reply_message(chat_id, f'–í—Ä–µ–º—è –ø–µ—Ä–µ–º–µ–Ω! –¢–µ–ø–µ—Ä—å —Ç—ã –Ω–µ {name}, –∞ –ê–Ω–æ–Ω–∏–º\n\n&#9888; –°–æ–æ–±—â–∞—é, —á—Ç–æ –Ω–∏–∫ –º–µ–Ω—è–µ—Ç—Å—è –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏–∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤ –±–æ—Ç–µ. –ù–∏–∫ —Ç–∞–∫–∂–µ –Ω–∏–∫–∞–∫ –Ω–µ —Å–≤—è–∑–∞–Ω —Å –§–ò (–§–∞–º–∏–ª–∏—è –∏ –ò–º—è) –í–ö–æ–Ω—Ç–∞–∫—Ç–µ', [])
				else:
					reply_message(chat_id, f'–í—Ä–µ–º—è –ø–µ—Ä–µ–º–µ–Ω! –¢–µ–ø–µ—Ä—å —Ç—ã –Ω–µ {name}, –∞ {new_name}\n\n&#9888; –°–æ–æ–±—â–∞—é, —á—Ç–æ –Ω–∏–∫ –º–µ–Ω—è–µ—Ç—Å—è –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏–∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤ –±–æ—Ç–µ. –ù–∏–∫ —Ç–∞–∫–∂–µ –Ω–∏–∫–∞–∫ –Ω–µ —Å–≤—è–∑–∞–Ω —Å –§–ò (–§–∞–º–∏–ª–∏—è –∏ –ò–º—è) –í–ö–æ–Ω—Ç–∞–∫—Ç–µ', [])

			else:
				reply_message(chat_id, f'–Ø –≤—Å–µ–≥–æ –ª–∏—à—å –±–æ—Ç –∏ —Ä–∞—Å–ø–æ–∑–Ω–∞—é —Ç–æ–ª—å–∫–æ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ - –∫–æ–º–∞–Ω–¥—ã. &#128532;', [])